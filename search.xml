<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[想去的夏令营+材料+网址合集]]></title>
    <url>%2F2019%2F04%2F28%2F%E6%9D%90%E6%96%99%2F</url>
    <content type="text"><![CDATA[随身备忘录？想去的学校的夏令营网申需要的材料 夏令营网申需要的材料 计算机类 985&amp;中科院 1. 中科大科学岛 : 2019.04.28 - 2019.06.20 需要材料 网上报名 表格签字 前两年半成绩单与总成绩排名证明 获奖证书复印件扫描件英语水平证明 打包为RAR格式上传进报名系统 2. 中科院信工所(2018年情况) 2018.04.24 - 2018.06.18 报名流程： 登录中国科学院智慧教育系统 ，中“科教结合协同育人学生报名入口”直接登录，点击首页右侧“科教结合协同育人”栏目，选择 “大学生夏令营计划报名”栏目，注册后进入申请系统进行信息填报，培养单位请选择“信息工程研究所”（请勿使用QQ、163邮箱） 填写完成后的申请表无需下载打印，仅供系统审核使用 请在“备注”一项，填写申请夏令营的批次以及是否服从调剂，如未注明则视为两批均可参加，服从调剂 3. 中科院深圳先研院（2018年情况） : 2018.05.10 - 2018.07.02 系统报名提交申请后下载打印“中国科学院2018年大学生夏令营申请表”并签字； 申请材料目录（附件1）； 本科成绩单和专业排名证明（需加盖教务处公章）； 相关英文能力证明（大学英语四，六级，雅思，托福与GRE等相关英文能力证明）； 学生证和身份证复印件； 其它证明材料（如已发表论文的复印件、各类证书奖状复印件等，较厚的论文或出版物提供摘要即可）； 推免资格证明（如有请提供）。 注意：材料不需要邮寄，一经录取，请在夏令营报到时现场提交。 4. 中科院计算所（2018） : 2018.05.08 - 2018.06.17 报名方式：申请人登录：http://zxsq.ucas.ac.cn/login/index/cs，按要求填报信息（注意事项请见附件）。报名阶段不用提交纸质材料。 提交纸质材料（入选学员报到时提交） 网报系统生成的《中国科学院大学2018年大学生暑期学校申请表》一份（须本人签字）； 在校学习成绩单及专业排名证明原件（如无排名证明，可暂不提交）； 英语四六级成绩单复印件或其他体现自己英语水平的证明材料； 两封教授或相当职称以上专家推荐信（见附件）； 其它能体现本人科研水平及工程能力的材料（如已发表的论文、获奖证书、已获得的专利等材料）。 5. 沈阳计算所 : 2019.04.22 - 2019.06.30 报名方式：中国科学院科教结合协同育人行动计划 ，点击首页右侧选择 “大学生夏令营报名”栏目，注册后进入申请系统。学生填报时请仔细阅读系统首页的“填报说明”和“常见问题解答”。审核无误后提交并下载报名表，将报名表及下列材料EMS邮寄至我所研究生部： 在校证明； 本科现阶段成绩单和排名； 获奖证明等相关材料(可选),包括已发表论文或出版物复印件、英语四/六级成绩单、各类奖励证书复印件等 6. 北京航空航天大学（2018） 2018.05.11 - 2018.06.10 申请时间及方式： 一、申请时间：2017年6月1日-2017年6月22日 二、申请入营需递交资料（只限纸版，A4纸左侧装订成册）： 1、封面见附件一 2、对申请有参考价值的本人自述（限1000字以内）一份。 3、本科阶段成绩单原件(三年或5个学期); 本科阶段成绩排名证明(需由教务部门盖章); 4、身份证的正反面复印件一份（正反面需复印在A4纸的同一页面上）。 5、英语水平证明(成绩单)复印件;（如有） 6、若本人发表过学术论文或出版物，提交复印件一份。 7、若本人在学期间，有学科竞赛、科技活动等各种获奖证明，提交复印件一份。 8、CCF CSP、ACM程序设计竞赛等程序设计能力证书复印件; 三、申请材料邮寄 申请资料邮寄信息： 北京航空航天大学计算机学院新主楼G844何雨收 电话：18811394318邮政编码：100191。 （14必须项；58如有则提供） 请快递或直接送达，不建议使用平邮。 211学校 北京交通大学（2018） 2018.05.03 - 2018.06.20 网上申报：参加暑期夏令营的应届生须在创新能力认定网报系统中报名。，北京交通大学研究生院招生专题——信息系统（硕士创新能力认定） ，该系统将于2018年5月7日对外开放。 有效期内的学生证（每学期均注册）、有效身份证原件及复印件； 本科成绩单原件一份，要求加盖学生所在学校教务处/学院公章；前五学期专业排名/综合排名证明一份，要求加盖学生所在学校教务处/学院公章； 国家英语四级或六级成绩单原件及复印件，成绩达425分以上； 各类获奖证书原件及复印件； 有学术科研成果（公开发表的论文、出版的专著等）者，请提供复印件； 申请人必须保证全部申请材料的真实性和准确性。如果申请人提交的信息不真实或不准确，我校将取消申请人营员资格，责任由申请人自负。 请将以上材料作为附件按系统要求上传至研究生院创新能力认定网报系统。报到时须携带申请材料原件及复印件进行现场核验。 西安电子科技大学（2018） : 2018.06.16 - 2018.07.09 一、申请材料准备 西安电子科技大学“优秀科研人才选拔计划”申请表（附件1）1份（请附本人身份证和学生证扫描件）； 截止目前本科阶段成绩单1份，请所在院系教务部门签章并注明专业排名和专业总人数，有条件的可提供所在院系教授或导师推荐意见； 其他相关证明材料（国家英语四、六级考试成绩或TOEFL、GRE/GMAT等体现自身英语水平的证明1份；获奖证书，发表或已录用的、能体现自身学术水平的学术论文、出版物或原创性工作成果）。 个人陈述一份。 以上均为纸质版，在夏令营报到时，提交给报到处。 二、申请方式 申请者须在规定时间进行网上报名。未进行网上报名的学生，将不受理申请。 网上报名：截止日期为2017年7月9日，请登陆西安电子科技大学研究生招生考生报名服务平台 ，网上注册后，按说明要求报名 数学类 华中科技大学（2018） 2018.05.16 - 2018.06.20 申请材料 夏令营申请表一份（附件1）、专家推荐书一份（附件2）（学院主页http://maths.hust.edu.cn/下载）； 成绩单原件； 各类获奖证书复印件一份； 国家英语四、六级考试成绩，或TOEFL成绩、GRE成绩等体现自身英语水平的证明一份； 申请人还可提交体现自身学术水平的代表性学术论文、出版物或原创性工作成果。 武汉理工大学（2018） 2018.06.06 - 2018.06.25 申请方式 网上申请 申请人在6月6日—6月25日期间登录“武汉理工大学研究生教育信息网——夏令营专栏（http://gd.whut.edu.cn/）”（以下简称“夏令营报名系统”），根据系统要求在线填写申请表，并完成相关材料的上传工作。 网上须上传材料 （1）《武汉理工大学理学院2018年优秀大学生暑期学术夏令营申请表》； （2）成绩单与总评成绩排名证明(由主管部门或院系盖章，排名须注明本专业总人数)； （3）外语水平证明复印件(如：英语四、六级考试成绩，托福成绩或GRE/GMAT成绩等)； （4）其他材料(如：发表论文、专利，各类获奖或资格证书等复印件)。 完成上传后，将以上文件压缩至RAR或ZIP格式文件中，作为附件发送电子邮件至：huqi@whut.edu.cn 要命。]]></content>
  </entry>
  <entry>
    <title><![CDATA[互联网协议入门1]]></title>
    <url>%2F2019%2F04%2F25%2F%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A81%2F</url>
    <content type="text"><![CDATA[系统视角看互联网的五层结构 一、 概述 1. 五层模型 OSI模型（7层） 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层 TCP/IP模型（4层） 应用层 传输层 网际层 网络接口层 互联网五层结构（自底向上）： 实体层（Physical Layer） 链接层（Link Layer） 网络层（Network Layer） 传输层（Transport Layer） 应用层（Application Layer） 越下面的层越靠近硬件，越上面的层越靠近用户。 2. 层与协议 互联网的每一层，都定义了很多协议（protocol），总称叫“互联网协议”（Internet Protocol）。它们是互联网的核心 二、 实体层 链接每个电脑，规定了网络的电器特性，作用是负责传送0和1的电信号。 三、 链接层 1. 定义 规定了0和1的分组方式 2. 以太网协议 以太网（Ethernet） 帧（Frame）：标头（Head）+数据（Data），每一帧包含64~1518字节，如果数据很长，需要分成多个帧发送。 Frame 包含的内容 长度 Head 说明项，发送者，接受者，数据类型 18字节 Data 具体内容 46~1500字节 3. MAC地址 以太网规定，连入网络的所有设备，都必须具有“网卡”接口。每块网卡都有独一无二的MAC地址，48个二进制位，通常用12个十六进制数表示。 例如：MAC Address ： 00-B0-D0-86-BB-F7 前六个十六进制： 厂商编号 猴六个十六进制： 网卡流水号 4. 广播（Broadcasting） APR协议 以太网数据包必须知道接收方的MAC地址才能发送 广播 以太网采用广播的方式，让所有计算机作为接收方，自行判断自己是否为接收方。（比较接收方的MAC地址与自己的是否相同） 四、 网络层 1 网络层的由来 需要区分MAC地址是否属于同一个子网络。如果是同一个子网络，采用广播的方式，否则采用路由的方式。（路由：指如何向不同的子网络分发数据包）。于是有了网络层，一套新的地址系统，用于区分不同的计算机是否属于同一个子网络，叫“网络地址”/“网址”。 2 IP协议 规定网络地址的协议。所定义的地址被称为IP地址。广泛采用IPv4协议，规定，网络地址由32个二进制位组成。 IP Address： 172.16.254.1（10101100.00010000.11111110.00000001） IP地址范围： 0.0.0.0 ~ 255.255.255.255（习惯上用四段十进制表示） 分为网络部分和主机部分，网络部分相同称为在同一个网络，主机部分表示各主机分到的地址。 子网掩码（subnet mask） 用于判断网络部分 最后更新于2019-4-26 23:14:29]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[镜像]]></title>
    <url>%2F2019%2F04%2F25%2F1%2F</url>
    <content type="text"><![CDATA[在没有墙翻的时候。。 清华： https://mirrors.tuna.tsinghua.edu.cn 阿里云 http://mirrors.aliyun.com/pypi 中国科技大学 https://pypi.mirrors.ustc.edu.cn 豆瓣(douban) http://pypi.douban.com 清华大学 https://pypi.tuna.tsinghua.edu.cn 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn]]></content>
  </entry>
  <entry>
    <title><![CDATA[python深度学习笔记-1]]></title>
    <url>%2F2019%2F04%2F24%2F1%2F</url>
    <content type="text"><![CDATA[折腾了一晚上，放弃了Ubuntu。 本篇主要记录刚安装好Anaconda后出现的一些环境的解决方案。 事实证明曲线救国也没什么卵用，还是四个小时解决了俩环境问题:) 安装TensorFlow和keras python3版本的快速安装(镜像网站) 12pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/ --upgrade tensorflow # for Python 3.*pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/ --upgrade tensorflow-gpu # for Python 3.* and GPU 问题解决 pip install tensorflow 后无法 import 12345#**注意翻墙**#在anaconda prompt中conda create -n tensorflow python=3.7activate tensorflowconda install scikit-learn 依旧报错 1.报错1： “No module named ‘numpy.core._multiarray_umath’” 解决方案： 更新numpy 1pip install -U numpy 2.更新numpy时报错2： “Could not install packages due to an EnvironmentError: [WinError 5] 拒绝访问。: ‘d:\anaconda3-5.3.0\lib\site-packages\numpy\core\multiarray.cp37-win_amd64.pyd’ Consider using the --user option or check the permissions.” 解决方案： 在install后面添加 --user 1pip install --user -U numpy 引入keras后出现的&quot;Using TensorFlow backend&quot;的错误 在引入头文件之后，加入 12import osos.environ['KERAS_BACKEND']='tensorflow']]></content>
      <categories>
        <category>python深度学习笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>深度学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C.Cpp怎样读取整行字符串进入数组]]></title>
    <url>%2F2018%2F11%2F15%2F1%2F</url>
    <content type="text"><![CDATA[做PAT的时候找到了C/C++整行读入字符串的方法，记录一下~ 方法一： scanf()读入char[] 方法： 123char str[1024];scanf("%[^\n]",&amp;str);getchar() 在scanf函数中，可以使用%c来读取一个字符，使用%s读取一个字符串,但是读取字符串时不忽略空格，读字符串时忽略开始的空格，并且读到空格为止，因此只能读取一个单词，而不是整行字符串。 %[ ] 可以读入一个字符集合，[]为集合的标志，%[]特指读入此集合所限定的那些字符比如%[A-Z]是输入大写字母，一旦遇到不在此集合的字符便停止。如果集合的第一个字符是&quot;&quot;，这说明读取不在&quot;“后面集合的字符，既遇到”^&quot;后面集合的字符便停止。注意此时读入的字符串是可以含有空格的，而且会把开头的空格也读进来。 注意：如果要循环的多次从屏幕上读取一行的话，就要在读取一行后，在用%c读取一个字符，将输入缓冲区中的换行符给读出来。否则的话，在下一次读取一行的时候，第一个就遇到’\n’，匹配不成功就直接返回了。这里可以用**scanf()或者getchar()**函数读取换行符。 方法二： getchar()读入char[] 方法： 12345char str[1024];int i=0;while((str[i]=getchar())!='\n') i++;getchar(); 说明：这样一个一个读也可以，也会把开头的空格读进来。最后也需要考虑换行符，使用getchar()读出来。 方法三： gets()读入char[] 方法： 12char str[1024];gets(str); 说明：感觉这个就是多个getchar的集合函数，很好用。功能是从标准输入键盘上读入一个完整的行（从标准输入读，一直读到遇到换行符），把读到的内容存入括号中指定的字符数组里，并用空字符’\0’取代行尾的换行符’\n’。读入时不需要考虑换行符。 方法四： getline()读入string 或者char[] 方法： 12345string str;getline(cin,str);//读入stringchar str2[1024];cin.getline(str2,1024);//读入char数组 说明：这是比较常用的方法，cin.getline第三个参数表示间隔符，默认为换行符’\n’。读入不需要考虑最后的换行符。 方法五： get()读入char[] 方法： 12char str3[1024];cin.get(str3,1024);//读入char数组 说明：get函数读入时需要考虑最后的换行符，也就是说，如果用get读入多行数据，要把’\n’另外读出来，一般使用cin.get(str,1024).get();来读入多组数据。]]></content>
      <categories>
        <category>算法的进阶之路</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Cpp</tag>
        <tag>学习过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（施工中）关于大学期间的反思]]></title>
    <url>%2F2018%2F09%2F23%2F2018-9-23-%E5%85%B3%E4%BA%8E%E6%95%B4%E4%B8%AA%E5%A4%A7%E5%AD%A6%E6%9C%9F%E9%97%B4%E8%A1%8C%E4%B8%BA%E7%9A%84%E5%8F%8D%E6%80%9D%2F</url>
    <content type="text"><![CDATA[。 对两年间行为的认知（出于什么目的） 弱点/需要改正的地方/做得不对的地方 日后的规划/想法/方向 展望 虽然反思的想法常有，但是并不会持久的出现在我的脑海中，也不会真正的去尝试去想什么或者打算去改变什么。趁着中秋节长假，好好思考一下自己的问题。 对两年来行为的认知 出于什么目的 到现在为止，大学也是整整过了两年半，基本算是有了成熟的价值观（也许吧）。但是经历的越多，得到的越多，失去的同样也很多。我完全想不起来我上大学的初心、高中的问题甚至是几个月前订定好的规划 关于这两年行为的反思]]></content>
      <categories>
        <category>反思</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NetX 主题优化细节记录]]></title>
    <url>%2F2018%2F09%2F21%2F2018-9-21-hexomeihua%2F</url>
    <content type="text"><![CDATA[花了两天整把博客做好了，不知道写一些什么，就把印象笔记里复制的乱糟糟美化方法整理一下吧 1.主页文章添加边框阴影效果 打开’themes/next/source/css/_custom/custom.styl’，添加代码 12345678// 主页文章添加阴影效果.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 2.添加本地搜索功能 在你站点的根目录下 1$ npm install hexo-generator-searchdb --save 打开 Hexo 站点的 _config.yml,添加配置 12345search: path: search.xml field: post format: html limit: 10000 打开 themes/next/_config.yml ,搜索关键字 local_search ,设置为 true： 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 3.统计功能:显示文章字数统计,阅读时长,总字数 在站点的根目录下： 1$ npm i --save hexo-wordcount 打开 themes/next/_config.yml ，搜索关键字 post_wordcount： 12345678910# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数,显示在页面底部 totalcount: true separated_meta: true 4.网站标题栏背景颜色 在 next/source/css/_custom 目录下面专门提供了 custom.styl 供我们自定义样式的，可以在 custom.styl 里面添加： 1234// Custom styles..site-meta &#123; background: $blue; //修改为自己喜欢的颜色&#125; 5.修改文章间分割线 打开 themes/next/source/css/_common/components/post/post-eof.styl ,修改： 12345678910.posts-expand &#123; .post-eof &#123; display: block; // margin: $post-eof-margin-top auto $post-eof-margin-bottom; width: 0%; //分割线长度 height: 0px; // 分割线高度 background: $grey-light; text-align: center; &#125;&#125; 6.各版块透明度修改 内容板块透明 博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .content-wrap 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 菜单栏背景 博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .header-inner 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 站点概况背景 博客根目录 themes\next\source\css_schemes\Pisces_sidebar.styl 文件 .sidebar-inner 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 然后修改博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .sidebar 标签下 background: $body-bg-color修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 按钮背景 博客根目录 themes\next\source\css_common\components\post\post-button.styl 同上修改对应位置为 1background: transparent; 7.修改文章底部的那个带#号的标签为图标 修改模板/themes/next/layout/_macro/post.swig，搜索 rel=“tag”&gt;#，将 # 换成 8.博文置顶 修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为： 12345678910111213141516171819202122232425262728'use strict'; var pagination = require('hexo-pagination'); module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 在文章中添加 top 值，数值越大文章越靠前，如 12345678---title: 解决Charles乱码问题date: 2017-05-22 22:45:48tags: 技巧categories: 技巧copyright: truetop: 100--- 参考来源： 1.Next主题:修改超链接黑色字体为蓝色 2.hexo + next主题高级配置 3.为NexT主题添加文章阅读量统计功能 4.[HEXO] NexT 主题提高博客颜值 5.Hexo+Next个人博客主题优化]]></content>
      <categories>
        <category>HEXO美化</category>
      </categories>
      <tags>
        <tag>HEXO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Welcome]]></title>
    <url>%2F2018%2F09%2F21%2F1%2F</url>
    <content type="text"><![CDATA[君は広い客席を见渡す 远く后ろのほうに目を向ける 一番后ろで拍手を送るのは 地球を一周して见た 君だ 耗时48小时，终于将效果比较满意的blog做出来了，这是我近期唯一一件可以认真投入其中不理人的事情了。感谢偶滴可爱队友琦对博客的推荐，让我终于可以沉下心好好做一件事了。接下来的一年半继续努力啊&gt;&lt; 以后会在这里添加一些学习记录，另外主题优化过程也会慢慢更新，希望可以坚持。 话是怎么说来着，投入与产出成正比。]]></content>
      <categories>
        <category>Welcome</category>
      </categories>
      <tags>
        <tag>Hello world</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>Hello world</tag>
      </tags>
  </entry>
</search>
