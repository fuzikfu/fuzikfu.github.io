<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[计算机网络-第三章-数据链路层]]></title>
    <url>%2F2019%2F05%2F02%2F%E8%B0%A2%E5%B8%8C%E4%BB%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%89%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[第三章 数据链路层 主要内容 数据链路层基本概念及基本问题 基本概念 三个基本问题 两种情况下的数据链路层 使用点对点信道的数据链路层 使用广播信道的数据链路层 以太局域网（以太网） 扩展以太网 高速以太网 使用点对点信道的数据链路层 多用于广域网 基本知识 数据链路层的通信类型 点对点信道 一对一 广播信道 一对多，必须使用专用的通信协议协调主机的数据发送 链路（link）：一条点到点的物理线路 数据链路（data link）： 装有协议的硬件和软件放在链路上。 网络适配器（网卡），一般的适配器都包括了数据链路层和物理层两层功能。 帧： （以下都是数据链路层的作用） 网络层→数据链路层： 头+IP数据报+尾（还有校验值） 数据链路层→网络层： 去头去尾校验无差错，提取IP数据报给网络层 三个基本问题 1.封装成帧（framing） 在一段数据的前后添加段首段尾（帧定界）， 帧的数据部分长度上限——最大传送单元MTU 以字符方式定界 SOH(Star Of Header)： 01 (16进制)， 0000 0001 （二进制） EOT(End Of Transmission)： 04 （16进制）， 0000 1000 （二进制） 2.透明传输 某个实际存在的事物好像看起来不存在一样。 字节填充(byte stuffing)/字符填充(character stuffing) 当提前出线SOH或EOT时，发送端可以在前面添加转义字符 “ESC” 3.差错检测 数字信号 0变1，1变0 误码率BER（Bit Error Rate）：传输错误的比特占所传输比特总数打的比率。 误码率与信噪比有很大关系。 CRC循环冗余检验。模2运算。异或。得到余数为帧检验序列FCS， 对面收到后，可以对新的序列进行整除，没有余数说明没有错误。 CRC只是一种验错方法，FCS是添加在数据后的冗余码。 特点： (1) 检测不出在哪一位错误 (2) 效果很好 点到点信道 PPP点对点协议 PPP协议应满足的要求 简单——首要的要求 封装成帧 透明性 多种网络层协议 多种类型链路 差错检测 检测连接状态 最大传送单元 网络层地址协商 数据压缩协商 PPP协议的组成 数据链路层协议可以用于异步串行或同步串行介质。 它使用LCP（链路控制协议）建立并维护数据链路链接。 网络控制协议NCP允许在点到点链接上使用多种网络层协议 LCP：身份验证、计费功能 PPP协议的帧格式 F（7E）1 | A（FF）1| C（03）1| 协议2 | 信息部分（不超过1500字节）| FCS2 | F（7E）1 字节填充 转义字符为0x7D（0111 1101） （1）每个0x7E转化为2字节序列(0x7D,0x5E) （2）信息字段中出现0x7D时，转化为(0x7D,0x5D) （3）出现ASCII码控制的字符（小于0x20的字符），字符前+0x7D,字符也改变。 例：0x03→(0x7D,0x23) 零比特填充 发送端：发送5个连续1，立即填入0 接收端：收刀5个连续1，删除后面0 PPP协议的工作状态 ？？？？ 使用广播信道的数据链路层 多用于局域网 星形网、环形网、总线网 CSMA/CD协议 载波监听多点接入/碰撞检测 多点接入 表示许多计算机以多点接入的方式连接在一根总线上。 载波监听 指每一个站在发送数据之前要先检测一下总线上是否有其他计算机在发送数据，如果有，则暂时不要发送数据，以免发生碰撞。 碰撞检测 “边发送边监听”，计算机边发送数据边检测新岛上的信号电压大小 传播时延对载波监听的影响 使用CSMA/CD协议的以太网不能进行全双工通信，只能进行双向交替通信（半双工） 每个站在发送数据之后的一小段时间内，存在着偶遇碰撞的可能性。 这种发送的不确定性使整个以太网的平均通信量远小于以太网的最高数据率 以太网的往返时延2t为争用期，取51.2mus为争用期长度。对于10Mb/s以太网，争用期可以发送512bit（64字节）。在前64字节没有发生冲突，则后续数据就不会发生冲突。 最短有效帧长64字节，长度小于64字节都认为是异常的。 二进制指数类型退避算法 参数k = min[重传次数，10] 从整数集合[0,1,…(2^k-1)]中随机取一个数r，重传应推后的时间就是r倍的争用期。 重传16次仍然不能成功时，丢弃该帧，并向高层报告 以太网 以太网的两个标准：DIX Ethernet V2 / IEEE 802.3 适配器：网卡 以太网是不可靠交付，劲最大努力交付。（不纠错） 星型拓扑 基本情况 粗同轴电缆→细同轴电缆→双绞线 集线器（hub）：可以看成总线。可以热拔插。 使用集线器的以太网在逻辑上仍然是总线网，歌工作站使用的还是CSMA/CD协议，并共享逻辑上的总线。 集线器很像一个多接口转发器，工作在物理层。 以太网的信道利用率 发送数据的时间占整个事件的比值 要提高以太网的信道利用率，就必须减小t与T0之比。在以太网中定义参数a，它是以太网单程端到端时延t与帧的发送时间T0之比：a = t/T0 a→0：表示一发生碰撞就立即可以检测出来，并立即停止发送，因此信道利用率很高。 a越大，表明争用期所占的比例越大，每发生一次碰撞就浪费许多信道资源，使得信道利用率明显降低。 接着就有极限信道利用率Smax = T0/(T0+t) = 1/(1+a) （只有当参数a远小于1才可能得到尽可能高的极限信道利用率） 以太网的MAC层 MAC层的硬件地址 MAC地址：48位二进制地址 前24位为厂家地址，后24位为流水线地址 适配器检查MAC地址 单播帧：一对一 广播帧：一对全体 多播帧：一对多 MAC帧的格式 数据封装：数据一段一包一帧一流 DIX Ethernet V2 标准（以太网的V2标准） 若帧内容小于46个字节，要补充到46 帧间最小间隔：9.6mus，想到与96bit的发送时间 IEEE 802.3标准 扩展的以太网 物理层的扩展 集线器级联，使网络中计算机数量增加，组建了一个大的冲突域： 数据链路层的扩展 优化： 数据链路层扩展局域网是使用网桥。 网桥会根据MAC帧的目的地址对收到的帧进行转发。 网桥具有过滤帧的功能，当网桥收到一个帧时，并不是向所有的接口转发此帧，二十先检查此帧的目的MAC地址，然后再确定该帧转发到哪一个接口。 接着网桥进化为交换机！ 交换机的端口带宽独享 安全 基于MAC地址转发（通过学习构建MAC地址表） 交换机可以全双工 高速以太网 100BASE-T 双绞线上传输100Mbint/s基带信号的星形拓扑以太网 IEEE 802.3 / CSMA/CD协议 名称 媒体 网段最大长度 特点 100BASE-TX 铜缆 100m 两队UTP5类线或屏蔽双绞线STP 100BAST-T4 铜缆 100m 4对UTP3类线或5类线 100BASE-FX 光缆 2000m 两根光纤，发送和接受各一根 100BASE-TX、100BASE-FX 合称为00BASE-X 吉比特以太网 10吉比特以太网和更快以太网]]></content>
      <categories>
        <category>计算机网络视频课笔记</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络-第二章-物理层]]></title>
    <url>%2F2019%2F05%2F02%2Fjisuanjiwangluo5-2%2F</url>
    <content type="text"><![CDATA[第二章 物理层 物理层基本概念 机械特性 电气特性 功能特性 过程特性 数据通信的基础知识 数据通信模型 相关术语：数据（data），信号（signal），码元（code） 信道 单向通信（单工通信），双向交替通信（半双工通信），双向同时通信（全双工通信） 基带信号，带通信号 调制方法：调幅（AM），调频（FM），调相（PM） 常用编码： 单极性不归零码 双极性不归零码 单极性归零码 双极性归零码 曼彻斯特编码 差分曼彻斯特编码 信道极限容量 奈氏准则：没有信号干扰，码元的传输速率仍有上限 香农公式：有信号干扰时。无差错传输的速率 C = Wlog2（1-S/N） b/s 物理层下面的传输媒体 导向传输媒体 双绞线（无屏蔽双绞线UTP、屏蔽双绞线STP） 同轴电缆（有线电视） 光缆 多模光纤（管道粗，角度可以有多种） 单模光纤（管道细） 非导向传输媒体 集线器：起信号放大和重发作用，目的是扩大传输范围，而不具备信号的定向传送能力 最大传输距离： 100m 集线器是一个大的冲突域 信道复用技术 复用（multiplexing） 集合 频分复用FDM： 使用不同的过滤器得到不同的信号 时分复用TDM： TDM信号也称为等时（isochronous）信号用户在不同的时间占用同样的频带宽度。注意：时分复用技术可能会造成资源的浪费 统计时分复用STDM 波分复用WDM： 光的频分复用 码分复用CDM（码分多址CDMA）：拥有很强的抗干扰性 数字传输系统 主要是广域网（电话局）的情况 同步光纤网SONET。OC-1 ：51.84Mbit/s 宽带接入技术 （xDSL:用数字技术对现有的模拟电话用户线进行改造） ADSL非对称数字用户线：离散多音调DMT调制技术 HFC光纤同轴混合网：频带宽，可以传输很多种信号 光纤到…FTTx技术：]]></content>
      <categories>
        <category>计算机网络视频课笔记</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络-第一章-计算机网络概述]]></title>
    <url>%2F2019%2F04%2F29%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C4-28%2F</url>
    <content type="text"><![CDATA[第一章 计算机网络概述 主要讲了七层模型和一些性能指标 OSI参考模型 名字（自底向上） 功能等 应用层 所有能产生网络流量的程序 表示层 在传输之前是否进行加密或者压缩处理（方式：二进制，ASCII码） 会话层 可以用来查木马netstat -n 传输层 可靠传输（/不可靠传输），流量控制 网络层 负责选择最佳路径，规划IP地址 数据链路层 帧的开始和结束、透明传输、差错校验 物理层 接口标准、电器标准、如何在屋里链路上传输更快的速度 （单一负责原则）每一层较为独立，某一层的改变不会改变其他层 排除： 物理层故障：（普通网页打不开） 解决方法：查看连接状态，查看发送和接受的数据包 数据链路层故障：A处能上B处不能上（MAC地址冲突）、ADSL欠费会导致数据链路层断开、网速没法协商一致、VLAN计算机连接到错误的VLAN 网络层故障：配置错误IP地址，子网掩码，配置错误的网关，路由器没有配置到达目标网络的路由 应用层故障：应用程序配置错误（错误的代理） OSI参考模型和网络安全 物理层安全 数据链路层安全 ADSL 账号密码 VLAN 交换机端口绑定MAC地址 网络层安全 在路由器上使用ADSL控制数据包流量、防火墙 应用层安全 开发的应用程序没有漏洞 计算机网络的性能指标 速率（data rate/bit rate） 定义：链接在计算机网络上的主机在数字信道上传送数据位数的速率 单位：b/s kb/s Mb/s Gb/s 带宽 定义： 数据通信领域中，数字信道所能传送的最高数据率 单位：b/s kb/s Mb/s Gb/s 吞吐量 在单位时间内通过某个网络的数据量 定义： 单位：b/s Mb/s 时延 发送时延 = 数据块长度（bit）/信道带宽（bit/s） 从开始发送到最后一个包离开发送单位所需时间。改变带宽→改变发送时延（带宽不能太大，无法识别信号。光线和铜线的区别：传播速度其实铜线大，但光线支持更高带宽） 传播时延 处理时延 排队时延 时延带宽积 时延带宽积 = 传播时延×带宽 计算机通讯的时候有多少数据在线路上等待 往返时间（RTT Round-Trip Time） 从发送方大宋数据开始，到发送方接收到接收方确认所需时间。 利用率 信道利用率：有数据通过的时间/（有+无）数据通过时间 网络利用率：信道利用率加权平均值（D = D0/(1-U)） D0：表示网络空闲时的时延 D：表示网络当前的时延 U：表示信道利用率]]></content>
      <categories>
        <category>计算机网络视频课笔记</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想去的夏令营+材料+网址合集]]></title>
    <url>%2F2019%2F04%2F28%2F%E6%9D%90%E6%96%99%2F</url>
    <content type="text"><![CDATA[随身备忘录？想去的学校的夏令营网申需要的材料 夏令营网申需要的材料 计算机类 985&amp;中科院 1. 中科大科学岛 : 2019.04.28 - 2019.06.20 需要材料 网上报名 表格签字 前两年半成绩单与总成绩排名证明 获奖证书复印件扫描件英语水平证明 打包为RAR格式上传进报名系统 2. 中科院信工所(2018年情况) 2018.04.24 - 2018.06.18 报名流程： 登录中国科学院智慧教育系统 ，中“科教结合协同育人学生报名入口”直接登录，点击首页右侧“科教结合协同育人”栏目，选择 “大学生夏令营计划报名”栏目，注册后进入申请系统进行信息填报，培养单位请选择“信息工程研究所”（请勿使用QQ、163邮箱） 填写完成后的申请表无需下载打印，仅供系统审核使用 请在“备注”一项，填写申请夏令营的批次以及是否服从调剂，如未注明则视为两批均可参加，服从调剂 3. 中科院深圳先研院（2018年情况） : 2018.05.10 - 2018.07.02 系统报名提交申请后下载打印“中国科学院2018年大学生夏令营申请表”并签字； 申请材料目录（附件1）； 本科成绩单和专业排名证明（需加盖教务处公章）； 相关英文能力证明（大学英语四，六级，雅思，托福与GRE等相关英文能力证明）； 学生证和身份证复印件； 其它证明材料（如已发表论文的复印件、各类证书奖状复印件等，较厚的论文或出版物提供摘要即可）； 推免资格证明（如有请提供）。 注意：材料不需要邮寄，一经录取，请在夏令营报到时现场提交。 4. 中科院计算所（2018） : 2018.05.08 - 2018.06.17 报名方式：申请人登录：http://zxsq.ucas.ac.cn/login/index/cs，按要求填报信息（注意事项请见附件）。报名阶段不用提交纸质材料。 提交纸质材料（入选学员报到时提交） 网报系统生成的《中国科学院大学2018年大学生暑期学校申请表》一份（须本人签字）； 在校学习成绩单及专业排名证明原件（如无排名证明，可暂不提交）； 英语四六级成绩单复印件或其他体现自己英语水平的证明材料； 两封教授或相当职称以上专家推荐信（见附件）； 其它能体现本人科研水平及工程能力的材料（如已发表的论文、获奖证书、已获得的专利等材料）。 5. 沈阳计算所 : 2019.04.22 - 2019.06.30 报名方式：中国科学院科教结合协同育人行动计划 ，点击首页右侧选择 “大学生夏令营报名”栏目，注册后进入申请系统。学生填报时请仔细阅读系统首页的“填报说明”和“常见问题解答”。审核无误后提交并下载报名表，将报名表及下列材料EMS邮寄至我所研究生部： 在校证明； 本科现阶段成绩单和排名； 获奖证明等相关材料(可选),包括已发表论文或出版物复印件、英语四/六级成绩单、各类奖励证书复印件等 6. 北京航空航天大学（2018） 2018.05.11 - 2018.06.10 申请时间及方式： 一、申请时间：2017年6月1日-2017年6月22日 二、申请入营需递交资料（只限纸版，A4纸左侧装订成册）： 1、封面见附件一 2、对申请有参考价值的本人自述（限1000字以内）一份。 3、本科阶段成绩单原件(三年或5个学期); 本科阶段成绩排名证明(需由教务部门盖章); 4、身份证的正反面复印件一份（正反面需复印在A4纸的同一页面上）。 5、英语水平证明(成绩单)复印件;（如有） 6、若本人发表过学术论文或出版物，提交复印件一份。 7、若本人在学期间，有学科竞赛、科技活动等各种获奖证明，提交复印件一份。 8、CCF CSP、ACM程序设计竞赛等程序设计能力证书复印件; 三、申请材料邮寄 申请资料邮寄信息： 北京航空航天大学计算机学院新主楼G844何雨收 电话：18811394318邮政编码：100191。 （14必须项；58如有则提供） 请快递或直接送达，不建议使用平邮。 211学校 北京交通大学（2018） 2018.05.03 - 2018.06.20 网上申报：参加暑期夏令营的应届生须在创新能力认定网报系统中报名。，北京交通大学研究生院招生专题——信息系统（硕士创新能力认定） ，该系统将于2018年5月7日对外开放。 有效期内的学生证（每学期均注册）、有效身份证原件及复印件； 本科成绩单原件一份，要求加盖学生所在学校教务处/学院公章；前五学期专业排名/综合排名证明一份，要求加盖学生所在学校教务处/学院公章； 国家英语四级或六级成绩单原件及复印件，成绩达425分以上； 各类获奖证书原件及复印件； 有学术科研成果（公开发表的论文、出版的专著等）者，请提供复印件； 申请人必须保证全部申请材料的真实性和准确性。如果申请人提交的信息不真实或不准确，我校将取消申请人营员资格，责任由申请人自负。 请将以上材料作为附件按系统要求上传至研究生院创新能力认定网报系统。报到时须携带申请材料原件及复印件进行现场核验。 西安电子科技大学（2018） : 2018.06.16 - 2018.07.09 一、申请材料准备 西安电子科技大学“优秀科研人才选拔计划”申请表（附件1）1份（请附本人身份证和学生证扫描件）； 截止目前本科阶段成绩单1份，请所在院系教务部门签章并注明专业排名和专业总人数，有条件的可提供所在院系教授或导师推荐意见； 其他相关证明材料（国家英语四、六级考试成绩或TOEFL、GRE/GMAT等体现自身英语水平的证明1份；获奖证书，发表或已录用的、能体现自身学术水平的学术论文、出版物或原创性工作成果）。 个人陈述一份。 以上均为纸质版，在夏令营报到时，提交给报到处。 二、申请方式 申请者须在规定时间进行网上报名。未进行网上报名的学生，将不受理申请。 网上报名：截止日期为2017年7月9日，请登陆西安电子科技大学研究生招生考生报名服务平台 ，网上注册后，按说明要求报名 数学类 华中科技大学（2018） 2018.05.16 - 2018.06.20 申请材料 夏令营申请表一份（附件1）、专家推荐书一份（附件2）（学院主页http://maths.hust.edu.cn/下载）； 成绩单原件； 各类获奖证书复印件一份； 国家英语四、六级考试成绩，或TOEFL成绩、GRE成绩等体现自身英语水平的证明一份； 申请人还可提交体现自身学术水平的代表性学术论文、出版物或原创性工作成果。 武汉理工大学（2018） 2018.06.06 - 2018.06.25 申请方式 网上申请 申请人在6月6日—6月25日期间登录“武汉理工大学研究生教育信息网——夏令营专栏（http://gd.whut.edu.cn/）”（以下简称“夏令营报名系统”），根据系统要求在线填写申请表，并完成相关材料的上传工作。 网上须上传材料 （1）《武汉理工大学理学院2018年优秀大学生暑期学术夏令营申请表》； （2）成绩单与总评成绩排名证明(由主管部门或院系盖章，排名须注明本专业总人数)； （3）外语水平证明复印件(如：英语四、六级考试成绩，托福成绩或GRE/GMAT成绩等)； （4）其他材料(如：发表论文、专利，各类获奖或资格证书等复印件)。 完成上传后，将以上文件压缩至RAR或ZIP格式文件中，作为附件发送电子邮件至：huqi@whut.edu.cn 要命。]]></content>
  </entry>
  <entry>
    <title><![CDATA[互联网协议入门1]]></title>
    <url>%2F2019%2F04%2F25%2F%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A81%2F</url>
    <content type="text"><![CDATA[系统视角看互联网的五层结构 一、 概述 1. 五层模型 OSI模型（7层） 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层 TCP/IP模型（4层） 应用层 传输层 网际层 网络接口层 互联网五层结构（自底向上）： 实体层（Physical Layer） 链接层（Link Layer） 网络层（Network Layer） 传输层（Transport Layer） 应用层（Application Layer） 越下面的层越靠近硬件，越上面的层越靠近用户。 2. 层与协议 互联网的每一层，都定义了很多协议（protocol），总称叫“互联网协议”（Internet Protocol）。它们是互联网的核心 二、 实体层 链接每个电脑，规定了网络的电器特性，作用是负责传送0和1的电信号。 三、 链接层 1. 定义 规定了0和1的分组方式 2. 以太网协议 以太网（Ethernet） 帧（Frame）：标头（Head）+数据（Data），每一帧包含64~1518字节，如果数据很长，需要分成多个帧发送。 Frame 包含的内容 长度 Head 说明项，发送者，接受者，数据类型 18字节 Data 具体内容 46~1500字节 3. MAC地址 以太网规定，连入网络的所有设备，都必须具有“网卡”接口。每块网卡都有独一无二的MAC地址，48个二进制位，通常用12个十六进制数表示。 例如：MAC Address ： 00-B0-D0-86-BB-F7 前六个十六进制： 厂商编号 猴六个十六进制： 网卡流水号 4. 广播（Broadcasting） APR协议 以太网数据包必须知道接收方的MAC地址才能发送 广播 以太网采用广播的方式，让所有计算机作为接收方，自行判断自己是否为接收方。（比较接收方的MAC地址与自己的是否相同） 四、 网络层 1 网络层的由来 需要区分MAC地址是否属于同一个子网络。如果是同一个子网络，采用广播的方式，否则采用路由的方式。（路由：指如何向不同的子网络分发数据包）。于是有了网络层，一套新的地址系统，用于区分不同的计算机是否属于同一个子网络，叫“网络地址”/“网址”。 2 IP协议 规定网络地址的协议。所定义的地址被称为IP地址。广泛采用IPv4协议，规定，网络地址由32个二进制位组成。 IP Address： 172.16.254.1（10101100.00010000.11111110.00000001） IP地址范围： 0.0.0.0 ~ 255.255.255.255（习惯上用四段十进制表示） 分为网络部分和主机部分，网络部分相同称为在同一个网络，主机部分表示各主机分到的地址。 子网掩码（subnet mask） 用于判断网络部分 最后更新于2019-4-26 23:14:29]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[镜像]]></title>
    <url>%2F2019%2F04%2F25%2F1%2F</url>
    <content type="text"><![CDATA[在没有墙翻的时候。。 清华： https://mirrors.tuna.tsinghua.edu.cn 阿里云 http://mirrors.aliyun.com/pypi 中国科技大学 https://pypi.mirrors.ustc.edu.cn 豆瓣(douban) http://pypi.douban.com 清华大学 https://pypi.tuna.tsinghua.edu.cn 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn]]></content>
  </entry>
  <entry>
    <title><![CDATA[python深度学习笔记-1]]></title>
    <url>%2F2019%2F04%2F24%2F1%2F</url>
    <content type="text"><![CDATA[折腾了一晚上，放弃了Ubuntu。 本篇主要记录刚安装好Anaconda后出现的一些环境的解决方案。 事实证明曲线救国也没什么卵用，还是四个小时解决了俩环境问题:) 安装TensorFlow和keras python3版本的快速安装(镜像网站) 12pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/ --upgrade tensorflow # for Python 3.*pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/ --upgrade tensorflow-gpu # for Python 3.* and GPU 问题解决 pip install tensorflow 后无法 import 12345#**注意翻墙**#在anaconda prompt中conda create -n tensorflow python=3.7activate tensorflowconda install scikit-learn 依旧报错 1.报错1： “No module named ‘numpy.core._multiarray_umath’” 解决方案： 更新numpy 1pip install -U numpy 2.更新numpy时报错2： “Could not install packages due to an EnvironmentError: [WinError 5] 拒绝访问。: ‘d:\anaconda3-5.3.0\lib\site-packages\numpy\core\multiarray.cp37-win_amd64.pyd’ Consider using the --user option or check the permissions.” 解决方案： 在install后面添加 --user 1pip install --user -U numpy 引入keras后出现的&quot;Using TensorFlow backend&quot;的错误 在引入头文件之后，加入 12import osos.environ['KERAS_BACKEND']='tensorflow']]></content>
      <categories>
        <category>python深度学习笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>深度学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C.Cpp怎样读取整行字符串进入数组]]></title>
    <url>%2F2018%2F11%2F15%2F1%2F</url>
    <content type="text"><![CDATA[做PAT的时候找到了C/C++整行读入字符串的方法，记录一下~ 方法一： scanf()读入char[] 方法： 123char str[1024];scanf("%[^\n]",&amp;str);getchar() 在scanf函数中，可以使用%c来读取一个字符，使用%s读取一个字符串,但是读取字符串时不忽略空格，读字符串时忽略开始的空格，并且读到空格为止，因此只能读取一个单词，而不是整行字符串。 %[ ] 可以读入一个字符集合，[]为集合的标志，%[]特指读入此集合所限定的那些字符比如%[A-Z]是输入大写字母，一旦遇到不在此集合的字符便停止。如果集合的第一个字符是&quot;&quot;，这说明读取不在&quot;“后面集合的字符，既遇到”^&quot;后面集合的字符便停止。注意此时读入的字符串是可以含有空格的，而且会把开头的空格也读进来。 注意：如果要循环的多次从屏幕上读取一行的话，就要在读取一行后，在用%c读取一个字符，将输入缓冲区中的换行符给读出来。否则的话，在下一次读取一行的时候，第一个就遇到’\n’，匹配不成功就直接返回了。这里可以用**scanf()或者getchar()**函数读取换行符。 方法二： getchar()读入char[] 方法： 12345char str[1024];int i=0;while((str[i]=getchar())!='\n') i++;getchar(); 说明：这样一个一个读也可以，也会把开头的空格读进来。最后也需要考虑换行符，使用getchar()读出来。 方法三： gets()读入char[] 方法： 12char str[1024];gets(str); 说明：感觉这个就是多个getchar的集合函数，很好用。功能是从标准输入键盘上读入一个完整的行（从标准输入读，一直读到遇到换行符），把读到的内容存入括号中指定的字符数组里，并用空字符’\0’取代行尾的换行符’\n’。读入时不需要考虑换行符。 方法四： getline()读入string 或者char[] 方法： 12345string str;getline(cin,str);//读入stringchar str2[1024];cin.getline(str2,1024);//读入char数组 说明：这是比较常用的方法，cin.getline第三个参数表示间隔符，默认为换行符’\n’。读入不需要考虑最后的换行符。 方法五： get()读入char[] 方法： 12char str3[1024];cin.get(str3,1024);//读入char数组 说明：get函数读入时需要考虑最后的换行符，也就是说，如果用get读入多行数据，要把’\n’另外读出来，一般使用cin.get(str,1024).get();来读入多组数据。]]></content>
      <categories>
        <category>算法的进阶之路</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Cpp</tag>
        <tag>学习过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[（施工中）关于大学期间的反思]]></title>
    <url>%2F2018%2F09%2F23%2F2018-9-23-%E5%85%B3%E4%BA%8E%E6%95%B4%E4%B8%AA%E5%A4%A7%E5%AD%A6%E6%9C%9F%E9%97%B4%E8%A1%8C%E4%B8%BA%E7%9A%84%E5%8F%8D%E6%80%9D%2F</url>
    <content type="text"><![CDATA[。 对两年间行为的认知（出于什么目的） 弱点/需要改正的地方/做得不对的地方 日后的规划/想法/方向 展望 虽然反思的想法常有，但是并不会持久的出现在我的脑海中，也不会真正的去尝试去想什么或者打算去改变什么。趁着中秋节长假，好好思考一下自己的问题。 对两年来行为的认知 出于什么目的 到现在为止，大学也是整整过了两年半，基本算是有了成熟的价值观（也许吧）。但是经历的越多，得到的越多，失去的同样也很多。我完全想不起来我上大学的初心、高中的问题甚至是几个月前订定好的规划 关于这两年行为的反思]]></content>
      <categories>
        <category>反思</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NetX 主题优化细节记录]]></title>
    <url>%2F2018%2F09%2F21%2F2018-9-21-hexomeihua%2F</url>
    <content type="text"><![CDATA[花了两天整把博客做好了，不知道写一些什么，就把印象笔记里复制的乱糟糟美化方法整理一下吧 1.主页文章添加边框阴影效果 打开’themes/next/source/css/_custom/custom.styl’，添加代码 12345678// 主页文章添加阴影效果.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 2.添加本地搜索功能 在你站点的根目录下 1$ npm install hexo-generator-searchdb --save 打开 Hexo 站点的 _config.yml,添加配置 12345search: path: search.xml field: post format: html limit: 10000 打开 themes/next/_config.yml ,搜索关键字 local_search ,设置为 true： 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 3.统计功能:显示文章字数统计,阅读时长,总字数 在站点的根目录下： 1$ npm i --save hexo-wordcount 打开 themes/next/_config.yml ，搜索关键字 post_wordcount： 12345678910# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数,显示在页面底部 totalcount: true separated_meta: true 4.网站标题栏背景颜色 在 next/source/css/_custom 目录下面专门提供了 custom.styl 供我们自定义样式的，可以在 custom.styl 里面添加： 1234// Custom styles..site-meta &#123; background: $blue; //修改为自己喜欢的颜色&#125; 5.修改文章间分割线 打开 themes/next/source/css/_common/components/post/post-eof.styl ,修改： 12345678910.posts-expand &#123; .post-eof &#123; display: block; // margin: $post-eof-margin-top auto $post-eof-margin-bottom; width: 0%; //分割线长度 height: 0px; // 分割线高度 background: $grey-light; text-align: center; &#125;&#125; 6.各版块透明度修改 内容板块透明 博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .content-wrap 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 菜单栏背景 博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .header-inner 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 站点概况背景 博客根目录 themes\next\source\css_schemes\Pisces_sidebar.styl 文件 .sidebar-inner 标签下 background: white修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 然后修改博客根目录 themes\next\source\css_schemes\Pisces_layout.styl 文件 .sidebar 标签下 background: $body-bg-color修改为： 1background: rgba(255,255,255,0.7); //0.7是透明度 按钮背景 博客根目录 themes\next\source\css_common\components\post\post-button.styl 同上修改对应位置为 1background: transparent; 7.修改文章底部的那个带#号的标签为图标 修改模板/themes/next/layout/_macro/post.swig，搜索 rel=“tag”&gt;#，将 # 换成 8.博文置顶 修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为： 12345678910111213141516171819202122232425262728'use strict'; var pagination = require('hexo-pagination'); module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 在文章中添加 top 值，数值越大文章越靠前，如 12345678---title: 解决Charles乱码问题date: 2017-05-22 22:45:48tags: 技巧categories: 技巧copyright: truetop: 100--- 参考来源： 1.Next主题:修改超链接黑色字体为蓝色 2.hexo + next主题高级配置 3.为NexT主题添加文章阅读量统计功能 4.[HEXO] NexT 主题提高博客颜值 5.Hexo+Next个人博客主题优化]]></content>
      <categories>
        <category>HEXO美化</category>
      </categories>
      <tags>
        <tag>HEXO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Welcome]]></title>
    <url>%2F2018%2F09%2F21%2F1%2F</url>
    <content type="text"><![CDATA[君は広い客席を见渡す 远く后ろのほうに目を向ける 一番后ろで拍手を送るのは 地球を一周して见た 君だ 耗时48小时，终于将效果比较满意的blog做出来了，这是我近期唯一一件可以认真投入其中不理人的事情了。感谢偶滴可爱队友琦对博客的推荐，让我终于可以沉下心好好做一件事了。接下来的一年半继续努力啊&gt;&lt; 以后会在这里添加一些学习记录，另外主题优化过程也会慢慢更新，希望可以坚持。 话是怎么说来着，投入与产出成正比。]]></content>
      <categories>
        <category>Welcome</category>
      </categories>
      <tags>
        <tag>Hello world</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>Hello world</tag>
      </tags>
  </entry>
</search>
